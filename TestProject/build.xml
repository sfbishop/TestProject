<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="TestProject" basedir="." default="compile">
<property name="src" value="./src" />
<property name="lib" value="./lib" />
<property name="classes" value="./bin" />
<property name="test.class.name" value="com.sb.TestSomething" />
<property name="build" location="build/classes" />
<property name="dist" location="dist" />
<property name="test.data.dir" location="build/testreports" />
<property name="webroot.src" value="./WebContent"/>
<property name="war.file.name" value="TestProject.war" />
	
<path id="test.classpath">
	<pathelement location="${classes}" />
	<pathelement location="${lib}/junit.jar" /> 
	<pathelement location="${lib}/org.hamcrest.core_1.1.0.v20090501071000.jar" />
	<fileset dir="${lib}">
		<include name="**/*.jar" />
	</fileset>
</path>

<target name="test-html"  description="Run tests and generate html reports"> 
	<mkdir dir="${test.data.dir}/tmp/rawtestoutput"/>
	<junitreport todir="${test.data.dir}/tmp">
		<fileset dir="${test.data.dir}">
			<include name="TEST-*.xml" />
			</fileset>
			<report todir="${test.data.dir}/test-reports"/>
	</junitreport>
	<junit printsummary="true" fork="yes" haltonfailure="yes">
		<batchtest fork="yes" todir="${test.data.dir}" >
	      <fileset dir="${classes}">
	        <include name="**/Test*.class" />
	      </fileset>
	    </batchtest>
		<formatter type="xml" />
		<classpath refid="test.classpath" />
	</junit>
</target>

<target name="init">
	<!-- Create the time stamp -->
	<tstamp />
	<!-- Create the build directory structure used by compile -->
	<mkdir dir="${build}" />
	<mkdir dir="${dist}" />
</target>

<target name="compile" depends="init" description="compile the source ">
	<!-- Compile the java code from ${src} into ${build} -->
	<javac srcdir="${src}" destdir="${build}"  includeantruntime="false"/>
	<jar destfile="dist/TestProject.jar" basedir="build/classes" />
	<antcall target="test-html" />
</target>

<target name="dist" depends="compile" description="generate the distribution jar file">
	<!-- Create the distribution directory -->
	<mkdir dir="${dist}" />
	<!-- Put everything in ${build} into the TestProject-${DSTAMP}.jar file -->
	<jar jarfile="${dist}/TestProject-${DSTAMP}.jar" basedir="${build}" />
</target>
<target name="war" depends="compile" description="compile class and create war file">
	<war destfile="${dist}/${war.file.name}" webxml="WebContent/WEB-INF/web.xml">
        <lib dir="${lib}">
            <include name="*.jar"/>
        </lib>
		<classes dir="${classes}"/>
		<fileset dir="WebContent"/>
		<lib dir="WebContent/WEB-INF/lib"/>
		
	</war>
	<echo>Copyied war : ${dist}${war.file.name}...</echo>
</target>
<!-- 
target: war 
Clean up the directories 
-->
<target name="clean" description="clean up directories">
	<delete dir="${build}" />
	<delete dir="${dist}" />
	<delete dir="${test.data.dir}" /> 
</target>
	
</project>
